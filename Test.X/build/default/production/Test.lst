MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001         list P=PIC16F877, F=INHX8M, C=160, N=80, ST=OFF, MM=OFF, R=DEC
                      00002         include "P16F877.INC"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Dec 08 2015
                      00005 ;  MPASM PIC16F877 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00541         LIST
2007   3F32           00003         __config ( _CP_OFF & _WDT_OFF & _BODEN_OFF & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _LVP_OFF & _DEBUG_OFF & _CPD_OFF )
                      00004         errorlevel -302         ;ignore error when storing to bank1
                      00005         
                      00006 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00007         ; Variables
                      00008 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00009         ; first define sensors
                      00010 #define HEIGHT  PORTA, 0    ; barrel height input, 0 = low, 1 = high
                      00011 #define STRIP0  PORTA, 1    ; strip height inputs, 00 = empty, 01 = middle,
                      00012 #define STRIP1  PORTA, 2    ; 1x = full
                      00013 #define BARREL  PORTA, 3    ; Barrel proximity sensor, interrupts on rising edge
                      00014 #define COL     PORTA, 5    ; Column proximity sensor, interrupts
                      00015         ; define motor outputs
                      00016 #define LEFTE   PORTC, 0    ; Left base motor enable bit
                      00017 #define LEFTD   PORTC, 1    ; Left base motor direction bit (forward/reverse)
                      00018 #define RIGHTE  PORTC, 2    ; Right base motor enable bit
                      00019 #define RIGHTD  PORTC, 3    ; Right base motor direction bit
                      00020 #define ARME    PORTC, 4    ; Arm motor enable bit
                      00021 #define ARMD    PORTC, 6    ; Arm motor direction bit (RC5 is weird)
                      00022         ; define LCD outputs
                      00023 #define RS      PORTD, 2
                      00024 #define E       PORTD, 3
                      00025         ; constants for timing
  00000057            00026 ARMTIME equ     D'87'       ; Arm timer in constant: 0.0262*73 = 1.9 sec
  0000005A            00027 ARMTIME2 equ    D'90'       ; Out-constant
  00000006            00028 ARMTIME3 equ    D'6'        ; Just the real arm time*3 for the optime
  0000001A            00029 COLTIME equ     D'26'       ; Column pass time constant: 0.125*32=4sec (T1)
                      00030                             ; the rest are all T0
  00000064            00031 TURNTIME equ    D'100'      ; First turn constant for exit 0.0262*0= 0 sec
  00000003            00032 TURNTIME2 equ   D'3'        ; real turn time*2 for optime use
  00000000            00033 REV1TIME equ    D'0'        ; 
  00000001            00034 REV2TIME equ    D'1'        ; Constant for exit reverse = 0.0262*256*8 = 54 sec
  00000001            00035 REV2TIME2 equ   D'1'
  00000000            00036 REVTIMES equ    D'0'        ; real sum of rev times for optime
  0000006A            00037 T1PADL  equ     0x6A        ; Padding constant so TMR1 has 0.5 sec period, low
  00000067            00038 T1PADH  equ     0x67        ; high byte
                      00039         ;variables for timing
  00000020            00040 T0CNT   equ     0x20        ; location of TMR0 high-level count register
  00000021            00041 T1CNTL  equ     0x21        ; location of TRM1 high-level count register, low
  00000022            00042 T1CNTH  equ     0x22        ; location of high byte
                      00043         ; variables for interrupts
  00000023            00044 TEMP_W      equ 0x23
  00000024            00045 TEMP_STATUS equ 0x24
                      00046         ; variables for LCD
  00000025            00047 COM     equ     0x25        ; buffer for instruction
  00000026            00048 DAT     equ     0x26        ; buffer for data
  00000027            00049 d1      equ     0x27
  00000028            00050 d2      equ     0x28
  00000029            00051 COUNTER equ     0x29
                      00052         ; variables for barrel data
  00000006            00053 SPEED   equ     D'6'        ; speed of motion in cm/sec
  00000080            00054 MAXL    equ     B'10000000'         ; max time = run time (60) in sec * 8
  00000000            00055 MAXH    equ     B'00000000'
  0000000A            00056 DIST_PAD equ    D'10'       ; difference between barrel sensor and start line
                      00057                             ; = 20 cm - 10 cm the barrel radius
  00000030            00058 TEMP1   equ     0x30        ; a useful second working register
  00000031            00059 TEMP2   equ     0x31
  00000032            00060 TEMP3   equ     0x32
  00000033            00061 TEMP4   equ     0x33
  00000034            00062 TEMP5   equ     0x34
  00000035            00063 FLAGGER equ     0x35        ; flag bit register
                      00064 #define FLAG_B  FLAGGER, 0
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00065 #define COL_EN  FLAGGER, 1
  00000036            00066 COUNTB  equ     0x36
  00000037            00067 NUM_TALL equ    0x37        ; number of tall barrels
  00000038            00068 NUM_B   equ     0x38        ; SET THIS!!
                      00069         
                      00070 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00071         ; Vectors
                      00072 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00073         org 0x0000
0000   2???           00074         goto    Init        
                      00075         org 0x0004
0004   00A3           00076         movwf   TEMP_W          ; save context
0005   0803           00077         movf    STATUS,W
0006   00A4           00078         movwf   TEMP_STATUS
                      00079         
0007   2???           00080         call    ISR     
                      00081         
0008   0824           00082         movf    TEMP_STATUS, W  ; restore context
0009   0083           00083         movwf   STATUS
000A   0823           00084         movf    TEMP_W, W
000B   0009           00085         retfie
                      00086         
                      00087 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00088         ; TABLES ;
                      00089 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000C                  00090 FirstMessage
000C   0782           00091         addwf   PCL, F
000D   3450 3472 3465 00092         dt      "Press 1 to start.", 0
       3473 3473 3420 
       3431 3420 3474 
       346F 3420 3473 
       3474 3461 3472 
       3474 342E 3400 
001F                  00093 EndMessage
001F   0782           00094         addwf   PCL, F
0020   3452 3475 346E 00095         dt      "Run Complete.", 0
       3420 3443 346F 
       346D 3470 346C 
       3465 3474 3465 
       342E 3400 
002E                  00096 Optime
002E   0782           00097         addwf   PCL, F
002F   3454 3469 346D 00098         dt      "Time: ", 0
       3465 343A 3420 
       3400 
                      00099 
0036                  00100 Seconds
0036   0782           00101         addwf   PCL, F
0037   3473 3465 3463 00102         dt      "secs", 0
       3473 3400 
                      00103 
003C                  00104 Bar_Num
003C   0782           00105         addwf   PCL, F
003D   3442 3461 3472 00106         dt      "Barrels: ", 0
       3472 3465 346C 
       3473 343A 3420 
       3400 
                      00107 
0047                  00108 Tall_B_Num
0047   0782           00109         addwf   PCL, F
0048   3454 3461 346C 00110         dt      "Tall: ", 0
       346C 343A 3420 
       3400 
                      00111 
004F                  00112 Short_B_Num
004F   0782           00113         addwf   PCL, F
0050   3453 3468 346F 00114         dt      "Short: ", 0
       3472 3474 343A 
       3420 3400 
                      00115 
0058                  00116 Distance
0058   0782           00117         addwf   PCL, F
0059   3400           00118         dt      "", 0
                      00119 
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005A                  00120 Centi
005A   0782           00121         addwf   PCL, F
005B   3463 346D 343A 00122         dt      "cm: ", 0
       3420 3400 
                      00123 
0060                  00124 Tall
0060   0782           00125         addwf   PCL, F
0061   3454 342C 3420 00126         dt      "T, ", 0
       3400 
                      00127 
0065                  00128 Short   
0065   0782           00129         addwf   PCL, F
0066   3453 342C 3420 00130         dt      "S, ", 0
       3400 
                      00131 
006A                  00132 Full
006A   0782           00133         addwf   PCL, F
006B   3446 3475 346C 00134         dt      "Full", 0
       346C 3400 
                      00135 
0070                  00136 Middle  
0070   0782           00137         addwf   PCL, F
0071   3448 3461 346C 00138         dt      "Half", 0
       3466 3400 
                      00139 
0076                  00140 Empty   
0076   0782           00141         addwf   PCL, F
0077   3445 346D 3470 00142         dt      "Empty", 0
       3474 3479 3400 
007D                  00143 All_Done
007D   0782           00144         addwf   PCL, F
007E   3441 346C 346C 00145         dt      "All done.", 0
       3420 3464 346F 
       346E 3465 342E 
       3400 
                      00146 
                      00147 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00148         ; MACROS ;
                      00149 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00150 Display macro   Message         ; this macro works through a table to LCD
                      00151         local   loop_
                      00152         local   end_
                      00153         clrf    COUNTER         ; as a counter
                      00154         clrw
                      00155 loop_   movf    COUNTER, W
                      00156         call    Message
                      00157         xorlw   B'00000000'
                      00158         btfsc   STATUS, Z
                      00159         goto    end_
                      00160         call    WR_DATA
                      00161         incf    COUNTER
                      00162         goto    loop_
                      00163 end_    
                      00164         endm
                      00165 
                      00166 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00167         ; INITIALIZATION
                      00168 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00169         ; note, interrupts can't be initialized yet because they would
                      00170         ; interefere with standby polling (RB4=COL is also keypad)
                      00171 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00172         ; Initialize Ports
                      00173 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0088   1683           00174 Init    bsf     STATUS, RP0     ; go to bank 1
                      00175         ; Initialize inputs
0089   30FF           00176         movlw   B'11111111'     ; set PORTA to input (sensors)
008A   0085           00177         movwf   TRISA
008B   30FF           00178         movlw   B'11111111'     ; set PORTB to input (keypad)
008C   0086           00179         movwf   TRISB
008D   3007           00180         movlw   B'00000111'     ; set PORTA to digital input
008E   009F           00181         movwf   ADCON1
                      00182         ; Initialize outputs
008F   3000           00183         movlw   B'00000000'     ; set PORTC to output (motors)
0090   0087           00184         movwf   TRISC
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0091   3000           00185         movlw   B'00000000'     ; set PORTD to output (LCD)
0092   0088           00186         movwf   TRISD
0093   1283           00187         bcf     STATUS, RP0     ; go to bank 0
0094   138B           00188         bcf     INTCON, GIE     
0095   0187           00189         clrf    PORTC           ; clear to prevent motors starting by accident
0096   01B7           00190         clrf    NUM_TALL
0097   01B8           00191         clrf    NUM_B
0098   01A1           00192         clrf    T1CNTL
0099   01A2           00193         clrf    T1CNTH
                      00194         ; Send Initial LCD Message
009A   3033           00195         movlw   B'00110011'
009B   2???           00196         call    WR_INS
009C   3032           00197         movlw   B'00110010'
009D   2???           00198         call    WR_INS
009E   3028           00199         movlw   B'00101000'
009F   2???           00200         call    WR_INS
00A0   300C           00201         movlw   B'00001100'
00A1   2???           00202         call    WR_INS
00A2   3006           00203         movlw   B'00000110'
00A3   2???           00204         call    WR_INS
00A4   3001           00205         movlw   B'00000001'
00A5   2???           00206         call    WR_INS
                      00207         Display FirstMessage
  0000                    M         local   loop_
  0000                    M         local   end_
00A6   01A9               M         clrf    COUNTER         ; as a counter
00A7   0103               M         clrw
00A8   0829               M loop_   movf    COUNTER, W
00A9   2???               M         call    FirstMessage
00AA   3A00               M         xorlw   B'00000000'
00AB   1903               M         btfsc   STATUS, Z
00AC   2???               M         goto    end_
00AD   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
00AE   0AA9               M         incf    COUNTER
00AF   2???               M         goto    loop_
00B0                      M end_    
                      00208         
                      00209 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00210         ; Standby
                      00211 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00B0   2???           00212         call Wait_K
                      00213         
                      00214 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00215         ; Initialize Interrupts/Timers
                      00216 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00B1                  00217 In_Int  
00B1   1683           00218         bsf     STATUS, RP0     ; go to bank 1
00B2   3007           00219         movlw   B'00000111'     ; interrupt only on falling edge of BARREL and
00B3   0081           00220         movwf   OPTION_REG      ; set TMR0 to overflow period = 0.0262 sec
00B4   1283           00221         bcf     STATUS, RP0     ; 
00B5   3000           00222         movlw   B'00000000'     ; disable interrupts
00B6   008B           00223         movwf   INTCON          ; from timers
                      00224         ; note: even though timer interrupts are not on, their flags are still
                      00225         ; set on overflow
00B7   306A           00226         movlw   T1PADL          ; put initial pad in TMR1 so it has the exact
00B8   008E           00227         movwf   TMR1L           ; right period
00B9   3067           00228         movlw   T1PADH
00BA   008F           00229         movwf   TMR1H
00BB   3031           00230         movlw   B'00110001'     ; set TMR1 to overflow period = 0.125 sec
00BC   0090           00231         movwf   T1CON           ; and start TMR1
00BD   14B5           00232         bsf     COL_EN          ; enable column detection
                      00233 
                      00234 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00235         ; Start Motors
                      00236 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00BE   3005           00237 Start_M movlw   B'00000101'     ; mask for PORTC, enable base motors and move
00BF   0087           00238         movwf   PORTC           ; forward
00C0   0838           00239         movf    NUM_B, W
00C1   0088           00240         movwf   PORTD
                      00241         
                      00242 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00243         ; MAIN ROUTINES ;
                      00244 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00245         
                      00246 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;       
                      00247         ; Main Loop
                      00248 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00249         ; note: This works by waiting for interrupts while polling the
                      00250         ; timer overflow flag, PIR1, TMR1IF, and restarting the timer with
                      00251         ; the constant padding
00C2   1C0C           00252 Main    btfss   PIR1, TMR1IF    ; poll TMR1 overflow flag
00C3   2???           00253         goto    Main            ; if not overflowed repeat
00C4   2???           00254         call    Overflow_Timer1 ; reset timer
00C5   1D85           00255         btfss   BARREL          ; check if barrel is detected
00C6   2???           00256         goto    Barrel_Check
00C7   1035           00257         bcf     FLAG_B          ; if not remove any flags
00C8   2???           00258         goto    Column_Check    ; and check for column
00C9                  00259 Barrel_Check
00C9   1C35           00260         btfss   FLAG_B          ; check if currently on barrel
00CA   2???           00261         call    Barrel_Sub      ; if there is a barrel get information
00CB   2???           00262         goto    Main
00CC                  00263 Column_Check
00CC   1CB5           00264         btfss   COL_EN          ; check if a column is detected
00CD   2???           00265         goto    Main
00CE   1E85           00266         btfss   COL
00CF   2???           00267         call    Column_Sub      ; if so goto column routine
00D0   2???           00268         goto    Main            ; if not repeat
                      00269 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00270         ; Exit Routine
                      00271 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00272         ; Disable all interrupts (they might misfire)
00D1                  00273 Exit_R  
                      00274         ; stop, retract arm
00D1   1010           00275         bcf     T1CON, TMR1ON   ; stop timer1
00D2   2???           00276         call    Reset_Timer0    ; reset timer0 before using
00D3   3064           00277         movlw   TURNTIME                ; set timer constant
00D4   00A0           00278         movwf   T0CNT
00D5                  00279 E4Loop
00D5   2???           00280         call    Poll_Timer0     ; get it running, delays 0.0262s
Message[305]: Using default destination of 1 (file).
00D6   0BA0           00281         decfsz  T0CNT
00D7   2???           00282         goto    E4Loop          ; loops until constant finishes
                      00283         
00D8   0187           00284         clrf    PORTC           ; stop motors
00D9   1707           00285         bsf     ARMD
00DA   1607           00286         bsf     ARME            ; start arm
00DB   2???           00287         call    Reset_Timer0    ; reset timer0 before using
00DC   3057           00288         movlw   ARMTIME         ; set timer constant
00DD   00A0           00289         movwf   T0CNT
00DE                  00290 E1Loop
00DE   2???           00291         call    Poll_Timer0     ; get it running, delays 0.0262s
Message[305]: Using default destination of 1 (file).
00DF   0BA0           00292         decfsz  T0CNT
00E0   2???           00293         goto    E1Loop          ; loops until constant finishes
                      00294         
00E1   300F           00295         movlw   B'00001111'     ; run in reverse until the end
00E2   0087           00296         movwf   PORTC
00E3   2???           00297         call    Reset_Timer0    ; reset timer0 before using
00E4   3001           00298         movlw   REV2TIME2       ; set high-level timer constant
00E5   00B1           00299         movwf   TEMP2
00E6                  00300 E2Loop
00E6   3001           00301         movlw   REV2TIME        ; set timer constant
00E7   00A0           00302         movwf   T0CNT
00E8                  00303 E3Loop
00E8   2???           00304         call    Poll_Timer0     ; get it running, delays 0.0262s
Message[305]: Using default destination of 1 (file).
00E9   0BA0           00305         decfsz  T0CNT
00EA   2???           00306         goto    E3Loop          ; loops until constant finishes
Message[305]: Using default destination of 1 (file).
00EB   0BB1           00307         decfsz  TEMP2
00EC   2???           00308         goto    E2Loop          ; double loop
00ED   0187           00309         clrf    PORTC           ; stop moving
                      00310         ; and just continue to the Display segment
                      00311         
                      00312 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00313         ; Display Loop
                      00314 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00315 ; Initialize the LCD ;;;;;;;;;;;;;;;;;;
00EE   3033           00316         movlw   B'00110011'
00EF   2???           00317         call    WR_INS
00F0   3032           00318         movlw   B'00110010'
00F1   2???           00319         call    WR_INS
00F2   3028           00320         movlw   B'00101000'
00F3   2???           00321         call    WR_INS
00F4   300C           00322         movlw   B'00001100'
00F5   2???           00323         call    WR_INS
00F6   3006           00324         movlw   B'00000110'
00F7   2???           00325         call    WR_INS
00F8   3001           00326         movlw   B'00000001'
00F9   2???           00327         call    WR_INS
                      00328 
                      00329 ; Display Message ;;;;;;;;;;;;;;;;;;;;;;
00FA   3001           00330         movlw   B'00000001'     ; clear LCD
                      00331         Display EndMessage
  0000                    M         local   loop_
  0000                    M         local   end_
00FB   01A9               M         clrf    COUNTER         ; as a counter
00FC   0103               M         clrw
00FD   0829               M loop_   movf    COUNTER, W
00FE   2???               M         call    EndMessage
00FF   3A00               M         xorlw   B'00000000'
0100   1903               M         btfsc   STATUS, Z
0101   2???               M         goto    end_
0102   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
0103   0AA9               M         incf    COUNTER
0104   2???               M         goto    loop_
0105                      M end_    
0105   2???           00332         call Wait_K
0106   3001           00333         movlw   B'00000001'     ; clear LCD
0107   2???           00334         call    WR_INS
                      00335         ; display the operation time
                      00336         ; take total T1 time in seconds
0108   0822           00337         movf    T1CNTH, W       ; all to divide by 8 and fit into one byte
0109   00B1           00338         movwf   TEMP2
010A   0821           00339         movf    T1CNTL, W
010B   00B0           00340         movwf   TEMP1
010C   1003           00341         bcf     STATUS, C
010D   0CB1           00342         rrf     TEMP2, F
010E   0CB0           00343         rrf     TEMP1, F
010F   0CB1           00344         rrf     TEMP2, F
0110   0CB0           00345         rrf     TEMP1, F
0111   0CB1           00346         rrf     TEMP2, F
0112   0CB0           00347         rrf     TEMP1, F        ; ends with time in secs
0113   3006           00348         movlw   ARMTIME3        ; add stationary times and reversing times
0114   07B0           00349         addwf   TEMP1, F        ; to get total
0115   3003           00350         movlw   TURNTIME2
0116   07B0           00351         addwf   TEMP1, F
0117   3000           00352         movlw   REVTIMES
0118   07B0           00353         addwf   TEMP1, F        ; done adding
0119   01B1           00354         clrf    TEMP2           ; should be clear anyway
011A   2???           00355         call    bin2dec999      ; convert to ASCII digits (3)
                      00356         Display Optime          ; write 'Operation Time'
  0000                    M         local   loop_
  0000                    M         local   end_
011B   01A9               M         clrf    COUNTER         ; as a counter
011C   0103               M         clrw
011D   0829               M loop_   movf    COUNTER, W
011E   2???               M         call    Optime
011F   3A00               M         xorlw   B'00000000'
0120   1903               M         btfsc   STATUS, Z
0121   2???               M         goto    end_
0122   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
0123   0AA9               M         incf    COUNTER
0124   2???               M         goto    loop_
0125                      M end_    
0125   0834           00357         movf    TEMP5, W        ; write from greatest to least to LCD
0126   2???           00358         call    WR_DATA
0127   0833           00359         movf    TEMP4, W
0128   2???           00360         call    WR_DATA
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0129   0832           00361         movf    TEMP3, W
012A   2???           00362         call    WR_DATA
                      00363         Display Seconds         ; add units
  0000                    M         local   loop_
  0000                    M         local   end_
012B   01A9               M         clrf    COUNTER         ; as a counter
012C   0103               M         clrw
012D   0829               M loop_   movf    COUNTER, W
012E   2???               M         call    Seconds
012F   3A00               M         xorlw   B'00000000'
0130   1903               M         btfsc   STATUS, Z
0131   2???               M         goto    end_
0132   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
0133   0AA9               M         incf    COUNTER
0134   2???               M         goto    loop_
0135                      M end_    
0135   2???           00364         call Wait_K
                      00365         ; display the number of barrels
0136   3001           00366         movlw   B'00000001'     ; clear LCD
0137   2???           00367         call    WR_INS
0138   0838           00368         movf    NUM_B, W        ; convert barrel number to ASCII
0139   00B0           00369         movwf   TEMP1
013A   2???           00370         call    bin2dec999
                      00371         Display Bar_Num         ; write 'Number of Barrels'
  0000                    M         local   loop_
  0000                    M         local   end_
013B   01A9               M         clrf    COUNTER         ; as a counter
013C   0103               M         clrw
013D   0829               M loop_   movf    COUNTER, W
013E   2???               M         call    Bar_Num
013F   3A00               M         xorlw   B'00000000'
0140   1903               M         btfsc   STATUS, Z
0141   2???               M         goto    end_
0142   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
0143   0AA9               M         incf    COUNTER
0144   2???               M         goto    loop_
0145                      M end_    
0145   0833           00372         movf    TEMP4, W
0146   2???           00373         call    WR_DATA
0147   0832           00374         movf    TEMP3, W
0148   2???           00375         call    WR_DATA         ; put barrel number
0149   2???           00376         call    Wait_K
                      00377         ; display the number of tall and short barrels
014A   3001           00378         movlw   B'00000001'     ; clear LCD
014B   2???           00379         call    WR_INS
014C   0837           00380         movf    NUM_TALL, W     ; convert barrel number to ASCII
014D   00B0           00381         movwf   TEMP1
014E   2???           00382         call    bin2dec999
                      00383         Display Tall_B_Num
  0000                    M         local   loop_
  0000                    M         local   end_
014F   01A9               M         clrf    COUNTER         ; as a counter
0150   0103               M         clrw
0151   0829               M loop_   movf    COUNTER, W
0152   2???               M         call    Tall_B_Num
0153   3A00               M         xorlw   B'00000000'
0154   1903               M         btfsc   STATUS, Z
0155   2???               M         goto    end_
0156   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
0157   0AA9               M         incf    COUNTER
0158   2???               M         goto    loop_
0159                      M end_    
0159   0833           00384         movf    TEMP4, W
015A   2???           00385         call    WR_DATA
015B   0832           00386         movf    TEMP3, W
015C   2???           00387         call    WR_DATA         ; put barrel number
015D   2???           00388         call    Wait_K
015E   3001           00389         movlw   B'00000001'     ; clear LCD
015F   2???           00390         call    WR_INS
0160   0838           00391         movf    NUM_B, W        ; convert barrel number to ASCII, after subtract
0161   00B0           00392         movwf   TEMP1
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0162   0837           00393         movf    NUM_TALL, W
0163   02B0           00394         subwf   TEMP1, F
0164   2???           00395         call    bin2dec999
                      00396         Display Short_B_Num
  0000                    M         local   loop_
  0000                    M         local   end_
0165   01A9               M         clrf    COUNTER         ; as a counter
0166   0103               M         clrw
0167   0829               M loop_   movf    COUNTER, W
0168   2???               M         call    Short_B_Num
0169   3A00               M         xorlw   B'00000000'
016A   1903               M         btfsc   STATUS, Z
016B   2???               M         goto    end_
016C   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
016D   0AA9               M         incf    COUNTER
016E   2???               M         goto    loop_
016F                      M end_    
016F   0833           00397         movf    TEMP4, W
0170   2???           00398         call    WR_DATA
0171   0832           00399         movf    TEMP3, W
0172   2???           00400         call    WR_DATA         ; put barrel number
0173   2???           00401         call    Wait_K
                      00402         ; display the barrel data: distance, type, height
0174   08B8           00403         movf    NUM_B, F        ; Test NUM_B for zero
0175   1903           00404         btfsc   STATUS, Z       ; if so, finish up
0176   2???           00405         goto    DDone
0177   3038           00406         movlw   NUM_B           ; put the literal initial address in FSR
0178   0084           00407         movwf   FSR
0179   0A84           00408         incf    FSR, F          ; go to first entry
017A   0838           00409         movf    NUM_B, W
017B   00B6           00410         movwf   COUNTB          ; start counter with N
017C                  00411 Disp_Loop
017C   3001           00412         movlw   B'00000001'     ; clear LCD
017D   2???           00413         call    WR_INS
017E   0A84           00414         incf    FSR, F
017F   0800           00415         movf    INDF, W         ; convert barrel number to ASCII, low
0180   00B0           00416         movwf   TEMP1
0181   0A84           00417         incf    FSR, F          ; high
0182   0800           00418         movf    INDF, W
0183   00B1           00419         movwf   TEMP2
0184   300F           00420         movlw   B'00001111'     ; get rid of sensor data
0185   05B1           00421         andwf   TEMP2, F
0186   2???           00422         call    bin2dec999
                      00423         ;Display Distance
0187   0834           00424         movf    TEMP5, W
0188   2???           00425         call    WR_DATA
0189   0833           00426         movf    TEMP4, W
018A   2???           00427         call    WR_DATA
018B   0832           00428         movf    TEMP3, W
018C   2???           00429         call    WR_DATA         ; put distance
                      00430         Display Centi
  0000                    M         local   loop_
  0000                    M         local   end_
018D   01A9               M         clrf    COUNTER         ; as a counter
018E   0103               M         clrw
018F   0829               M loop_   movf    COUNTER, W
0190   2???               M         call    Centi
0191   3A00               M         xorlw   B'00000000'
0192   1903               M         btfsc   STATUS, Z
0193   2???               M         goto    end_
0194   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
0195   0AA9               M         incf    COUNTER
0196   2???               M         goto    loop_
0197                      M end_    
0197   1E00           00431         btfss   INDF, 4         ; read barrel type
0198   2???           00432         goto    DShort          ; if short, say short
                      00433         Display Tall            ; else say tall
  0000                    M         local   loop_
  0000                    M         local   end_
0199   01A9               M         clrf    COUNTER         ; as a counter
019A   0103               M         clrw
019B   0829               M loop_   movf    COUNTER, W
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019C   2???               M         call    Tall
019D   3A00               M         xorlw   B'00000000'
019E   1903               M         btfsc   STATUS, Z
019F   2???               M         goto    end_
01A0   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
01A1   0AA9               M         incf    COUNTER
01A2   2???               M         goto    loop_
01A3                      M end_    
01A3   1B8B           00434         btfsc   INTCON, 7       ; known clear, just skips
                      00435 DShort  Display Short
  0000                    M         local   loop_
  0000                    M         local   end_
01A4   01A9               M         clrf    COUNTER         ; as a counter
01A5   0103               M         clrw
01A6   0829               M loop_   movf    COUNTER, W
01A7   2???               M         call    Short
01A8   3A00               M         xorlw   B'00000000'
01A9   1903               M         btfsc   STATUS, Z
01AA   2???               M         goto    end_
01AB   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
01AC   0AA9               M         incf    COUNTER
01AD   2???               M         goto    loop_
01AE                      M end_    
01AE   1B00           00436         btfsc   INDF, 6         ; read barrel strip height
01AF   2???           00437         goto    DFull           ; display appropriate height
01B0   1E80           00438         btfss   INDF, 5
01B1   2???           00439         goto    DEmpty
                      00440         Display Middle
  0000                    M         local   loop_
  0000                    M         local   end_
01B2   01A9               M         clrf    COUNTER         ; as a counter
01B3   0103               M         clrw
01B4   0829               M loop_   movf    COUNTER, W
01B5   2???               M         call    Middle
01B6   3A00               M         xorlw   B'00000000'
01B7   1903               M         btfsc   STATUS, Z
01B8   2???               M         goto    end_
01B9   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
01BA   0AA9               M         incf    COUNTER
01BB   2???               M         goto    loop_
01BC                      M end_    
01BC   2???           00441         goto    LSTOP
                      00442 DEmpty  Display Empty
  0000                    M         local   loop_
  0000                    M         local   end_
01BD   01A9               M         clrf    COUNTER         ; as a counter
01BE   0103               M         clrw
01BF   0829               M loop_   movf    COUNTER, W
01C0   2???               M         call    Empty
01C1   3A00               M         xorlw   B'00000000'
01C2   1903               M         btfsc   STATUS, Z
01C3   2???               M         goto    end_
01C4   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
01C5   0AA9               M         incf    COUNTER
01C6   2???               M         goto    loop_
01C7                      M end_    
01C7   2???           00443         goto    LSTOP
                      00444 DFull   Display Full
  0000                    M         local   loop_
  0000                    M         local   end_
01C8   01A9               M         clrf    COUNTER         ; as a counter
01C9   0103               M         clrw
01CA   0829               M loop_   movf    COUNTER, W
01CB   2???               M         call    Full
01CC   3A00               M         xorlw   B'00000000'
01CD   1903               M         btfsc   STATUS, Z
01CE   2???               M         goto    end_
01CF   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
01D0   0AA9               M         incf    COUNTER
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D1   2???               M         goto    loop_
01D2                      M end_    
01D2   2???           00445 LSTOP   call    Wait_K          ; standby
01D3   0BB6           00446         decfsz  COUNTB, F       ; when counter reaches zero exit
01D4   2???           00447         goto    Disp_Loop
01D5                  00448 DDone   
01D5   3001           00449         movlw   B'00000001'     ; clear LCD
01D6   2???           00450         call    WR_INS
                      00451         Display All_Done        ; That's all, folks.
  0000                    M         local   loop_
  0000                    M         local   end_
01D7   01A9               M         clrf    COUNTER         ; as a counter
01D8   0103               M         clrw
01D9   0829               M loop_   movf    COUNTER, W
01DA   2???               M         call    All_Done
01DB   3A00               M         xorlw   B'00000000'
01DC   1903               M         btfsc   STATUS, Z
01DD   2???               M         goto    end_
01DE   2???               M         call    WR_DATA
Message[305]: Using default destination of 1 (file).
01DF   0AA9               M         incf    COUNTER
01E0   2???               M         goto    loop_
01E1                      M end_    
01E1   2???           00452         call Wait_K
01E2   0063           00453         sleep
01E3                  00454 Endloop
01E3   2???           00455         goto Endloop
                      00456         
                      00457 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00458         ; SUBROUTINES ;
                      00459 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00460         
                      00461 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00462         ; General
                      00463 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00464         
                      00465         ; Standby
01E4   1C86           00466 Wait_K  btfss   PORTB, 1        ; check for keypad signal (any key pressed)
01E5   2???           00467         goto    Wait_K          ; if nothing loop
01E6   0008           00468         return  
                      00469 
                      00470         ; Timers
01E7                  00471 Overflow_Timer1
                      00472         ; note: adding the padding instead of just moving it is important
                      00473         ; because the barrel interrupt might allow the timer to overflow 
                      00474         ; and increment to an appreciable value, so wiping would underestimate
                      00475         ; time elapsed. All assuming the timer continue to counts after 
                      00476         ; overflow. As long as the time elapsed during the barrel subroutine
                      00477         ; is less than the timer period minus padding, even an interrupt during
                      00478         ; this reset routine won't mess up the timing.
01E7   100C           00479         bcf     PIR1, TMR1IF    ; clear the interrupt flag
01E8   0AA1           00480         incf    T1CNTL, F       ; increment high-level count low byte
01E9   1903           00481         btfsc   STATUS, Z       ; if it overflows
01EA   0AA2           00482         incf    T1CNTH, F       ; increment the high byte
01EB   306A           00483         movlw   T1PADL          ; get padding low byte
Message[305]: Using default destination of 1 (file).
01EC   078E           00484         addwf   TMR1L           ; add to Timer1 low byte
01ED   1803           00485         btfsc   STATUS,C        ; Check for carry
01EE   0A8F           00486         incf    TMR1H, F        ; if so add to Timer1 high byte
01EF   3067           00487         movlw   T1PADH          ; get high byte
Message[305]: Using default destination of 1 (file).
01F0   078F           00488         addwf   TMR1H           ; add to Timer1 high byte
                      00489         ;;; Check if timer counter = max count
01F1   0821           00490         movf    T1CNTL, W
01F2   0088           00491         movwf   PORTD
01F3   3000           00492         movlw   MAXH
01F4   0622           00493         xorwf   T1CNTH, W       ; subtract max high from timer counter high
01F5   1D03           00494         btfss   STATUS, Z       ; if they are different who cares
01F6   0008           00495         return
                      00496         ;movlw  MAXL
                      00497         ;xorwf  T1CNTL, W       ; substract max low from timer counter low
                      00498         ;btfsc  STATUS, Z       ; if they are the same goto exit routine
01F7   2???           00499         goto    Exit_R 
01F8   3003           00500         movlw   B'00000011'
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F9   0638           00501         xorwf   NUM_B, W
01FA   1D03           00502         btfss   STATUS, Z
                      00503         ;;;
01FB   0008           00504         return          ; back to waiting
01FC   2???           00505         goto    Exit_R
                      00506 
01FD                  00507 Reset_Timer0
01FD   110B           00508         bcf     INTCON, T0IF    ; clear overflow
01FE   0181           00509         clrf    TMR0            ; set to zero, no padding
01FF   0008           00510         return
0200                  00511 Poll_Timer0
0200   1D0B           00512         btfss   INTCON, T0IF    ; check timer0 overflow
0201   2???           00513         goto Poll_Timer0        ; if yes go to reset, if no loop
0202   2???           00514         goto Reset_Timer0
0203                  00515 Overflow_Timer0
0203   110B           00516         bcf     INTCON, T0IF    ; clear interrupt flag
0204   0008           00517         return
                      00518         
                      00519 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00520         ; Barrel Subroutine
                      00521 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
0205                  00522 Barrel_Sub  ; basically take a photo through the sensors and deposit the data
0205   1435           00523         bsf     FLAG_B          ; set barrel flag
0206   1383           00524         bcf     STATUS, IRP     ; making sure indirect addressing is bank 0
0207   0AB8           00525         incf    NUM_B, F        ; increment the number of barrels
0208   3038           00526         movlw   NUM_B           ; put the literal initial address in FSR
0209   0084           00527         movwf   FSR
020A   0D38           00528         rlf     NUM_B, W        ; add the number of barrels*2 to FSR
020B   0784           00529         addwf   FSR, F
020C   0838           00530         movf    NUM_B, W
020D   0088           00531         movwf   PORTD
                      00532 ; Compute Distance ;;;;;;;;;;;;;;;;;;;;;;
020E   0822           00533         movf    T1CNTH, W       ; all to divide by 8 and fit into one byte
020F   00B0           00534         movwf   TEMP1
0210   0821           00535         movf    T1CNTL, W
0211   00B1           00536         movwf   TEMP2
0212   1003           00537         bcf     STATUS, C
0213   0CB0           00538         rrf     TEMP1, F
0214   0CB1           00539         rrf     TEMP2, F
0215   0CB0           00540         rrf     TEMP1, F
0216   0CB1           00541         rrf     TEMP2, F
0217   0CB0           00542         rrf     TEMP1, F
0218   0C31           00543         rrf     TEMP2, W        ; ends with time in secs in W
                      00544         ; Multiplication Routine 
0219   0080           00545         movwf   INDF            ; put time into low byte
021A   3006           00546         movlw   SPEED           ; get cm/sec into W
021B   0A84           00547         incf    FSR, F
021C   0180           00548         clrf    INDF
                      00549 
021D   01B0           00550         clrf    TEMP1
021E   15B0           00551         bsf     TEMP1,3
021F   0384           00552         decf    FSR, F
0220   0C80           00553         rrf     INDF,F
0221                  00554 Mult_Loop
0221   0A84           00555         incf    FSR, F
0222   1803           00556         btfsc   STATUS, C
0223   0780           00557         addwf   INDF,F
                      00558         
0224   0C80           00559         rrf     INDF,F
0225   0384           00560         decf    FSR, F
0226   0C80           00561         rrf     INDF,F
                      00562 
Message[305]: Using default destination of 1 (file).
0227   0BB0           00563         decfsz TEMP1
0228   2???           00564         goto    Mult_Loop
                      00565         ; Now subtract the distance between start line and barrel detect
0229   300A           00566         movlw   DIST_PAD    ; get the padding
022A   0280           00567         subwf   INDF, F     ; subtract from low byte
022B   1C03           00568         btfss   STATUS, C   ; if negative decrease larger byte
022C   2???           00569         goto    Decrease_It
022D   0A84           00570         incf    FSR, F      ; exit at high byte
022E   2???           00571         goto    Sensing
022F                  00572 Decrease_It
022F   0A84           00573         incf    FSR, F
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0230   0380           00574         decf    INDF, F
                      00575 ; Read and Save Sensors ;;;;;;;;;;;;;;;;;
0231                  00576 Sensing
0231   300F           00577         movlw   0x0F
0232   0580           00578         andwf   INDF, F
0233   0805           00579         movf    PORTA, W    ; get sensors
0234   390F           00580         andlw   0x0F        ; avoid any weird connections
0235   00B4           00581         movwf   TEMP5
0236   0E34           00582         swapf   TEMP5, W    ; put the results in the top 4 bits of the high
0237   0480           00583         iorwf   INDF, F     ; register for this barrel
0238   1805           00584         btfsc   HEIGHT      ; if barrel is tall
0239   0AB7           00585         incf    NUM_TALL, F ; add to tall barrel tally
023A   0008           00586         return              ; done barrel subroutine
                      00587         
                      00588         
                      00589 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00590         ; Column Subroutine
                      00591 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
023B                  00592 Column_Sub
023B   10B5           00593         bcf     COL_EN          ; disable further interrupts from col
023C   1010           00594         bcf     T1CON, TMR1ON   ; stop timer1
023D   0187           00595         clrf    PORTC           ; stop motors
023E   1707           00596         bsf     ARMD
023F   1607           00597         bsf     ARME            ; start arm
0240   2???           00598         call    Reset_Timer0    ; reset timer0 before using
0241   3057           00599         movlw   ARMTIME         ; set timer constant
0242   00A0           00600         movwf   T0CNT
0243                  00601 A1Loop
0243   2???           00602         call    Poll_Timer0     ; get it running, delays 0.0262s
Message[305]: Using default destination of 1 (file).
0244   0BA0           00603         decfsz  T0CNT
0245   2???           00604         goto    A1Loop          ; loops until constant finishes
0246   3005           00605         movlw   B'00000101'     ; start moving again
0247   0087           00606         movwf   PORTC
0248   301A           00607         movlw   COLTIME         ; second time constant
0249   00A0           00608         movwf   T0CNT           ; still use the timer0 counter for this
024A   1410           00609         bsf     T1CON, TMR1ON
024B                  00610 A2Loop
024B   1C0C           00611         btfss   PIR1, TMR1IF    ; poll timer1 (some variance, max 0.125s)
024C   2???           00612         goto    A2Loop
024D   2???           00613         call    Overflow_Timer1 ; natural timer1 increase
Message[305]: Using default destination of 1 (file).
024E   0BA0           00614         decfsz  T0CNT           ; until high-level constant runs down
024F   2???           00615         goto    A2Loop
0250   1010           00616         bcf     T1CON, TMR1ON
0251   3010           00617         movlw   B'00010000'     ; put arm in reverse and stop motors
0252   0087           00618         movwf   PORTC
0253   2???           00619         call    Reset_Timer0
0254   305A           00620         movlw   ARMTIME2        ; set timer constant
0255   00A0           00621         movwf   T0CNT
0256                  00622 A3Loop
0256   2???           00623         call    Poll_Timer0     ; get it running, delays 0.0262s
Message[305]: Using default destination of 1 (file).
0257   0BA0           00624         decfsz  T0CNT
0258   2???           00625         goto    A3Loop          ; loops until constant finishes
0259   160B           00626         bsf     INTCON, INTE
025A   3005           00627         movlw   B'00000101'     ; start moving again
025B   0087           00628         movwf   PORTC
025C   1410           00629         bsf     T1CON, TMR1ON   ; start timer1 again
025D   0008           00630         return                  ; done column subroutine
                      00631         
                      00632 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00633         ; LCD Subroutines
                      00634 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00635         
                      00636 ; LCD Interfacing ;;;;;;;;;;;;;;;;;;
025E   1108           00637 WR_INS  bcf     RS              ; writes instructions to LCD, like clear
025F   00A5           00638         movwf   COM
0260   39F0           00639         andlw   0xF0
0261   0088           00640         movwf   PORTD
0262   1588           00641         bsf     E
0263   2???           00642         call    delay
0264   1188           00643         bcf     E
0265   0E25           00644         swapf   COM, W
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0266   39F0           00645         andlw   0xF0
0267   0088           00646         movwf   PORTD
0268   1588           00647         bsf     E
0269   2???           00648         call    delay
026A   1188           00649         bcf     E
026B   2???           00650         call    delay
026C   0008           00651         return
                      00652 
026D   1508           00653 WR_DATA bsf     RS              ; for writing ASCII to LCD
026E   00A6           00654         movwf   DAT
026F   0826           00655         movf    DAT, W
0270   39F0           00656         andlw   0xF0
0271   3E04           00657         addlw   4
0272   0088           00658         movwf   PORTD
0273   1588           00659         bsf     E
0274   2???           00660         call    delay
0275   1188           00661         bcf     E
0276   0E26           00662         swapf   DAT, W
0277   39F0           00663         andlw   0xF0
0278   3E04           00664         addlw   4
0279   0088           00665         movwf   PORTD
027A   1588           00666         bsf     E
027B   2???           00667         call    delay
027C   1188           00668         bcf     E
027D   0008           00669         return
                      00670 
027E                  00671 delay
027E   304E           00672         movlw   0x4E            ; for use in LCD subroutines
027F   00A7           00673         movwf   d1
0280   3014           00674         movlw   0x14            ; modified this to make it faster
0281   00A8           00675         movwf   d2
0282                  00676 delay_0
0282   0BA7           00677         decfsz  d1, F
0283   2???           00678         goto    $+2
0284   0BA8           00679         decfsz  d2, F
0285   2???           00680         goto    delay_0
                      00681         
0286   2???           00682         goto    $+1
0287   0000           00683         nop
0288   0008           00684         return
                      00685 
                      00686 ; LCD Calculations ;;;;;;;;;;;;;;;;;;
                      00687 #define NumL    TEMP1   ; define variables for this subroutine, reusability
                      00688 #define NumH    TEMP2
                      00689 #define Ones    TEMP3
                      00690 #define Tens    TEMP4
                      00691 #define Hund    TEMP5
                      00692 
0289                  00693 bin2dec999              ; binary to ascii conversion <999
0289   0831           00694         movf NumH, w
028A   3EF1           00695         addlw 241
028B   0731           00696         addwf NumH, w
028C   00B4           00697         movwf Hund      ;b_2 = 2a_2 - 15
                      00698 
028D   0734           00699         addwf Hund, w
028E   0734           00700         addwf Hund, w
028F   3EFD           00701         addlw 253
0290   00B3           00702         movwf Tens
0291   0E30           00703         swapf NumL, w
0292   390F           00704         andlw 0x0F
0293   07B3           00705         addwf Tens, f
0294   07B3           00706         addwf Tens, f   ;b_1 = 6a_2 + 2a_1 - 48
                      00707 
0295   0731           00708         addwf NumH, w
0296   3CFB           00709         sublw 251
0297   00B2           00710         movwf Ones
0298   07B2           00711         addwf Ones, f
0299   07B2           00712         addwf Ones, f
029A   07B2           00713         addwf Ones, f
029B   0830           00714         movf NumL, w
029C   390F           00715         andlw 0x0F
029D   07B2           00716         addwf Ones, f   ;b_0 = a_0 - 4(a_2 + a_1) - 20
                      00717 
029E   300A           00718         movlw 10
MPASM 5.65                          TEST.ASM   4-4-2016  15:34:00         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029F                  00719 bin2dec999a                     ;9 cycles max
029F   07B2           00720         addwf Ones, f
02A0   03B3           00721         decf Tens, f
02A1   1C03           00722         btfss   STATUS, C
02A2   2???           00723          goto bin2dec999a
                      00724 
02A3                  00725 bin2dec999b                     ;6 cycles max
02A3   07B3           00726         addwf Tens, f
02A4   03B4           00727         decf Hund, f
02A5   1C03           00728         btfss   STATUS, C
02A6   2???           00729          goto bin2dec999b
                      00730 
02A7                  00731 bin2dec999c                     ;3 cycles max
02A7   07B4           00732         addwf Hund, f
02A8   1C03           00733         btfss   STATUS, C
02A9   2???           00734          goto bin2dec999c
                      00735 
02AA   3030           00736         movlw   B'00110000'
02AB   04B4           00737         iorwf   Hund, F         ; my addition to make it actual ASCII
02AC   04B3           00738         iorwf   Tens, F
02AD   04B2           00739         iorwf   Ones, F
02AE   0008           00740         return
                      00741 
                      00742         
                      00743 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00744         ; INTERRUPT HANDLER
                      00745 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
02AF                  00746 ISR     
02AF   0008           00747         return                  ; there shouldn't be another reason
                      00748         
                      00749 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00750         ; End of Program
                      00751 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00752         
3F32                  00753         end

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    24 reported,     6 suppressed

